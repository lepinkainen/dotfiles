# Shrike's .bashrc

# https://wiki.archlinux.org/index.php/Color_Bash_Prompt
# https://github.com/ijonas/dotfiles/blob/master/bash/config

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

stty stop undef
stty start undef

export DISPLAY=

# emacsd setup
# Run emacs-server if needed
#export ALTERNATE_EDITOR=""
#export EDITOR="emacsclient -nw -c"$@""
#alias emacs="$EDITOR"

export EDITOR=nano

export TERM="screen-256color"

# hm?
export GCAL='--iso-week-number=yes --with-week-number --starting-day=Monday'

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
#export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL="ignoreboth"
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S  "
# ignore some boring stuff. The " *" bit ignores all command lines
# starting with whitespace, useful to selectively avoid the history
export HISTIGNORE="cd:cd ..:..*: *"

export PYTHONSTARTUP="$HOME/.pystartup"
# pip install --user
export PYTHONPATH=$PYTHONPATH:$HOME/.local/bin/

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    #PROMPT_COMMAND='echo -ne "\033]0;${LOGNAME}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    # diz no worky, need to add $PS1 somewhere
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    ;;
screen)
    #PROMPT_COMMAND='echo -ne "\033]0;${LOGNAME}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    #PS1='\[\033k\033\\\]\u@\h:\w\$ '
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    alias rm='rm -I'
fi

# create search database to current directory
function create_searchdb {
  updatedb -l 0 -o locatedb --database-root $(pwd)
}
# search from the current tree using an optimized database if available
function search {
  # recursive upwards search for a locate db in this tree
  local p="$(pwd)/";
  while [ "$p" != "/" ];
  do
    if [ -e "$p/locatedb" ];
    then
      local db="$p"locatedb;
    fi;
    p="${p%/*/}/";
  done;
  # if there is a pregenerated db, use it
  # otherwise revert to global db
  if [[ "$db" == "" ]];
  then
    locate -e -i "$@";
  else
    locate -e -i -d "$db" "$@";
  fi
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# local binaries
if [ -d $HOME/bin ] ; then
    PATH=$HOME/bin:"${PATH}"
fi
# local binaries for pip install --user
if [ -d $HOME/.local/bin ] ; then
    PATH=$HOME/.local/bin:"${PATH}"
fi

# for emacs..
#export TERM=xterm-256color

# xterm-256color breaks irssi scrolling completely under tmux
alias irssi="TERM=screen irssi"

# Thanks to https://gist.github.com/634750

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"


function stopped_jobs(){
  if [  "$(jobs 2>&1)" != "" ]; then
    echo "${COLOR_NONE}(${RED}bg${COLOR_NONE})"
  fi
}

function tmux_bg(){
  # if not inside tmux check for existing detached tmux sessions
  if [ "${TMUX:-}" = "" ]; then
    tmux ls > /dev/null 2>&1 && {
      echo "${COLOR_NONE}(${GREEN}tmux${COLOR_NONE})"
    }
  fi
}

eval "$(starship init bash)"

if [ -z "$TMUX" ] && [ ${UID} != 0 ]
then
    tmux new-session -A -s main
fi


[ -f ~/.fzf.bash ] && source ~/.fzf.bash

. "$HOME/.cargo/env"
